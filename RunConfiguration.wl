(* ::Package:: *)

(* ::Section:: *)
(*Run configuration*)


(* ::Text:: *)
(*This is a module for definition of arbitrary constants, guesses and calculation configurations*)


SetDirectory["~/Documents/Studia/Anizotropie/FunctionalRenormalization"];
Get["ModuleNaming.wl"];


(* ::Subsection::Closed:: *)
(*Initial guess*)


(* ::Text:: *)
(*Guess for a 3-dimensional system for any regulator function and any value of N.*)
(*Additionally this cache contains variable dimensions - list of dimensions at which a fixed point should be calculated and guess for \[Rho]Max at first dimension*)


guess3d = {v[0] -> -0.4766581632477618`, v[1] -> -0.46887236367720536`, v[2] -> -0.4610055622762192`, v[3] -> -0.453056991790956`, v[4] -> -0.4450258851685048`, v[5] -> -0.43691147583041673`, v[6] -> -0.42871299790752593`, v[7] -> -0.4204296864781789`, v[8] -> -0.4120607778080789`, v[9] -> -0.4036055095911172`, v[10] -> -0.39506312119080644`, v[11] -> -0.3864328538819857`, v[12] -> -0.37771395109246964`, v[13] -> -0.36890565864432245`, v[14] -> -0.36000722499443233`, v[15] -> -0.35101790147406214`, v[16] -> -0.3419369425270522`, v[17] -> -0.3327636059463517`, v[18] -> -0.32349715310855576`, v[19] -> -0.3141368492061295`, v[20] -> -0.30468196347700105`, v[21] -> -0.29513176943121255`, v[22] -> -0.2854855450743224`, v[23] -> -0.27574257312725864`, v[24] -> -0.26590214124233025`, v[25] -> -0.2559635422151128`, v[26] -> -0.24592607419193296`, v[27] -> -0.23578904087268804`, v[28] -> -0.22555175170874642`, v[29] -> -0.2152135220956888`, v[30] -> -0.20477367356066117`, v[31] -> -0.19423153394412587`, v[32] -> -0.1835864375758115`, v[33] -> -0.17283772544467704`, v[34] -> -0.16198474536272273`, v[35] -> -0.1510268521224968`, v[36] -> -0.13996340764816428`, v[37] -> -0.1287937811400238`, v[38] -> -0.11751734921237457`, v[39] -> -0.10613349602465855`, v[40] -> -0.09464161340581981`, v[41] -> -0.0830411009718459`, v[42] -> -0.07133136623647574`, v[43] -> -0.05951182471508195`, v[44] -> -0.04758190002175662`, v[45] -> -0.03554102395965363`, v[46] -> -0.023388636604664222`, v[47] -> -0.011124186382527188`, v[48] -> 0.0012528698604989152`, v[49] -> 0.013743066793247738`, v[50] -> 0.026346930541359267`, v[51] -> 0.039064978634884694`, v[52] -> 0.05189771996153967`, v[53] -> 0.06484565472533016`, v[54] -> 0.07790927441024015`, v[55] -> 0.09108906174863202`, v[56] -> 0.10438549069396884`, v[57] -> 0.11779902639742378`, v[58] -> 0.13133012518789136`, v[59] -> 0.1449792345548718`, v[60] -> 0.1587467931337801`, z[0] -> 0.9974456047635437`, z[1] -> 0.9976065590733431`, z[2] -> 0.9977641426370404`, z[3] -> 0.997918330277897`, z[4] -> 0.9980690976622427`, z[5] -> 0.9982164213265307`, z[6] -> 0.9983602787015955`, z[7] -> 0.9985006481362282`, z[8] -> 0.9986375089201093`, z[9] -> 0.9987708413060491`, z[10] -> 0.9989006265314859`, z[11] -> 0.9990268468391946`, z[12] -> 0.9991494854971589`, z[13] -> 0.9992685268175618`, z[14] -> 0.999383956174852`, z[15] -> 0.9994957600228407`, z[16] -> 0.999603925910792`, z[17] -> 0.9997084424984638`, z[18] -> 0.9998092995700649`, z[19] -> 0.9999064880470894`, z[21] -> 1.0000898286587239`, z[22] -> 1.000175968421937`, z[23] -> 1.0002584148651064`, z[24] -> 1.0003371647472699`, z[25] -> 1.0004122160165316`, z[26] -> 1.0004835678142532`, z[27] -> 1.000551220477926`, z[28] -> 1.000615175542714`, z[29] -> 1.0006754357416519`, z[30] -> 1.000732005004499`, z[31] -> 1.0007848884552375`, z[32] -> 1.0008340924082175`, z[33] -> 1.0008796243629525`, z[34] -> 1.000921492997564`, z[35] -> 1.0009597081608894`, z[36] -> 1.0009942808632553`, z[37] -> 1.0010252232659378`, z[38] -> 1.0010525486693156`, z[39] -> 1.0010762714997399`, z[40] -> 1.0010964072951356`, z[41] -> 1.0011129726893588`, z[42] -> 1.00112598539533`, z[43] -> 1.0011354641869687`, z[44] -> 1.0011414288799554`, z[45] -> 1.0011439003113445`, z[46] -> 1.001142900318057`, z[47] -> 1.0011384517142756`, z[48] -> 1.0011305782677709`, z[49] -> 1.0011193046751798`, z[50] -> 1.0011046565362614`, z[51] -> 1.0010866603271455`, z[52] -> 1.0010653433725927`, z[53] -> 1.0010407338172738`, z[54] -> 1.001012860596077`, z[55] -> 1.0009817534034382`, z[56] -> 1.0009474426616798`, z[57] -> 1.000909959488341`, z[58] -> 1.0008693356624567`, z[59] -> 1.000825603589729`, z[60] -> 1.0007787962664094`, yy[0] -> 0.46084022919769324`, yy[1] -> 0.46031967682020725`, yy[2] -> 0.4597697009763366`, yy[3] -> 0.4591903788997352`, yy[4] -> 0.4585818054015873`, yy[5] -> 0.4579440929795912`, yy[6] -> 0.4572773718236189`, yy[7] -> 0.45658178981181174`, yy[8] -> 0.4558575124777443`, yy[9] -> 0.4551047229481632`, yy[10] -> 0.45432362185106034`, yy[11] -> 0.4535144271939253`, yy[12] -> 0.452677374212106`, yy[13] -> 0.4518127151872951`, yy[14] -> 0.45092071923625016`, yy[15] -> 0.450001672069949`, yy[16] -> 0.4490558757234741`, yy[17] -> 0.4480836482570158`, yy[18] -> 0.4470853234284752`, yy[19] -> 0.4460612503382395`, yy[20] -> 0.44501179304679417`, yy[21] -> 0.44393733016592285`, yy[22] -> 0.4428382544243335`, yy[23] -> 0.441714972208627`, yy[24] -> 0.44056790308060684`, yy[25] -> 0.43939747927200035`, yy[26] -> 0.4382041451577296`, yy[27] -> 0.4369883567089372`, yy[28] -> 0.43575058092702496`, yy[29] -> 0.4344912952600202`, yy[30] -> 0.4332109870026241`, yy[31] -> 0.4319101526813383`, yy[32] -> 0.43058929742609237`, yy[33] -> 0.4292489343298187`, yy[34] -> 0.4278895837974341`, yy[35] -> 0.426511772885691`, yy[36] -> 0.4251160346353587`, yy[37] -> 0.42370290739717814`, yy[38] -> 0.4222729341530102`, yy[39] -> 0.4208266618335634`, yy[40] -> 0.41936464063403706`, yy[41] -> 0.4178874233289632`, yy[42] -> 0.4163955645874541`, yy[43] -> 0.4148896202899821`, yy[44] -> 0.41337014684772`, yy[45] -> 0.41183770052535335`, yy[46] -> 0.41029283676815104`, yy[47] -> 0.4087361095339251`, yy[48] -> 0.4071680706303446`, yy[49] -> 0.4055892690578749`, yy[50] -> 0.40400025035839165`, yy[51] -> 0.4024015559692712`, yy[52] -> 0.4007937225824698`, yy[53] -> 0.3991772815077817`, yy[54] -> 0.39755275803908685`, yy[55] -> 0.3959206708219689`, yy[56] -> 0.3942815312205814`, yy[57] -> 0.3926358426810581`, yy[58] -> 0.3909841000880717`, yy[59] -> 0.3893267891102314`, yy[60] -> 0.38766438552739346`, \[Eta] -> 0.04686235304645756`};
Export[INITIALGUESSFILE, guess3d];


(* ::Subsection:: *)
(*Run configurations*)


(* ::Text:: *)
(*Configurations to run calculations for O (N) - model. *)


(* ::Subsubsection::Closed:: *)
(*'keys'*)


(* ::Text:: *)
(*Values of model parameters for calculations to be carried at.*)
(*Each single run will calculate FP and exponents for each combination of keys	*)


(* ::Subsubsection::Closed:: *)
(*'keyLabels'*)


(* ::Text:: *)
(*Parameters which values are stored in  the 'keys' list. *)
(*'keyLabels' may include : *)
(*	"dim" (physical dimension), *)
(*	"N" (as in O (N)), *)
(*	"alpha" (regulator function prefactor), *)
(*	"\[Rho]Max" (initial guess for \[Rho]Max - value of \[Rho]Max is optimized further in the calculation)*)


(* ::Subsubsection::Closed:: *)
(*'constants'*)


(* ::Text:: *)
(*List of dictionaries, each dictionary corresponds to one run configuration.*)
(*Every entry of 'constants' should have identical set of keys.*)
(*Each key of each entry of 'constants' should have one corresponding floating point scalar value.*)


(* ::Subsubsection:: *)
(*Additional note*)


(* ::Text:: *)
(*Each of possible entries keyLabel : "dim", "N", "alpha", "\[Rho]Max" should appear either in keyLabels or as a key in each entry of constants. *)


(* ::Subsubsection::Closed:: *)
(*O(N) run configurations*)


dims = N[Table[2+If[Divisible[i,2],2^(-i/2),2^(-(i-1)/2)*3/4],{i,0,12}]];
alphas = {0.5+ 0.25 j};

keys = Table[Tuples[{dims,alphas}],{j,1,22}];
(*keys = {3., 2.9, 2.8, 2.7, 2.6, 2.5, 2.4, 2.3, 2.2, 2.175, 2.15, 2.125, 
	2.1, 2.09, 2.08, 2.07, 2.06, 2.05, 2.04, 2.03, 2.02, 
	2.01, 2.009, 2.008, 2.007, 2.006, 2.005, 2.004, 2.003, 2.002,
	2.001, 2.00075, 2.0005, 2.00025, 2.0001, 2.};	
keyLabels = {"dim"};
constants = Table[Association["\[Rho]Max"->0.2, "N"\[Rule]i/2., "alpha" \[Rule] 2],{i,2,6}];*)

keyLabels = {"dim","alpha"};
constants = Table[Association["\[Rho]Max"->0.15, "N"->i/2.],{i,2,6}];

configurations = Tuples[{keys,constants}];

Export[ONRUNCONF, {keyLabels, configurations}];
Print[Length[configurations]];


(* ::Subsubsection::Closed:: *)
(*Z4 run configurations*)


dims2 = N[Table[2+10^(-i/8),{i,0,16}]];
alphas = Table[ 0.25 j , {i,0,0}];
keys = Table[Tuples[{dims,alphas}],{j,2,24}];
keyLabels = {"dim","alpha"};
constants = {Association["\[Rho]Max"->0.2]};

configurations = Tuples[{keys,constants}];
Export[Z4RUNCONF, {keyLabels, configurations}];
Print[Length[configurations]];
